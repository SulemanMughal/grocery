from typing import Protocol, Optional, Iterable
from .entities import GroceryEntity, ItemEntity,DailyIncomeEntity

class GroceryRepositoryPort(Protocol):
    def create(self, *, name: str, location: str) -> GroceryEntity: ...
    def get_by_id(self, uid: str) -> Optional[GroceryEntity]: ...
    def list_active(self) -> Iterable[GroceryEntity]: ...
    def update_fields(self, *, uid: str, **fields) -> GroceryEntity: ...
    def soft_delete(self, *, uid: str) -> None: ...


class ItemRepositoryPort(Protocol):
    def create(self, *, grocery_uid: str, name: str, item_type: str,
               item_location: str, price: float) -> ItemEntity: ...
    def get_by_id(self, uid: str) -> Optional[ItemEntity]: ...
    def list_by_grocery(self, grocery_uid: str, include_deleted: bool=False) -> Iterable[ItemEntity]: ...
    def update_fields(self, *, uid: str, **fields) -> ItemEntity: ...
    def soft_delete(self, *, uid: str) -> None: ...





class DailyIncomeRepositoryPort(Protocol):
    def create(self, *, grocery_uid: str, amount: float, date: str) -> DailyIncomeEntity: ...
    def list_by_grocery(self, grocery_uid: str, start: str | None = None,
                        end: str | None = None) -> Iterable[DailyIncomeEntity]: ...
