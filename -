{
    "openapi": "3.0.3",
    "info": {
        "title": "Grocery API",
        "version": "1.0.0",
        "description": "REST API for managing groceries, items, suppliers, and daily income."
    },
    "paths": {
        "/api/v1/auth/login/": {
            "post": {
                "operationId": "auth_login_create",
                "summary": "Login (email + password) â†’ JWT access/refresh",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Logged in."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/refresh/": {
            "post": {
                "operationId": "auth_refresh_create",
                "summary": "Refresh access token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Access token refreshed."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/groceries/": {
            "get": {
                "operationId": "groceries_list",
                "description": "Return all active grocery accounts. Not part of assessment core, but useful for admin QA/debug.",
                "summary": "List groceries (Admin only)",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "Groceries"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginated_EnvList"
                                }
                            }
                        },
                        "description": "Groceries list."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groceries_create",
                "summary": "Create a new grocery (Admin)",
                "tags": [
                    "Groceries"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroceryCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroceryCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroceryCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Grocery created."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/groceries/{grocery_uid}/income/": {
            "get": {
                "operationId": "groceries_income_list",
                "description": "Routes:\n  POST /api/v1/groceries/{grocery_uid}/income/   -> create (Admin or owning Supplier)\n  GET  /api/v1/groceries/{grocery_uid}/income/   -> list  (Admin; Supplier only for their grocery)\n    optional query params: ?start=YYYY-MM-DD&end=YYYY-MM-DD",
                "summary": "List daily income (Admin any grocery; Supplier only their grocery)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "end",
                        "schema": {
                            "type": "string"
                        },
                        "description": "YYYY-MM-DD"
                    },
                    {
                        "in": "path",
                        "name": "grocery_uid",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "schema": {
                            "type": "string"
                        },
                        "description": "YYYY-MM-DD"
                    }
                ],
                "tags": [
                    "Income"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/_Env"
                                    }
                                }
                            }
                        },
                        "description": "Income list."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groceries_income_create",
                "description": "Routes:\n  POST /api/v1/groceries/{grocery_uid}/income/   -> create (Admin or owning Supplier)\n  GET  /api/v1/groceries/{grocery_uid}/income/   -> list  (Admin; Supplier only for their grocery)\n    optional query params: ?start=YYYY-MM-DD&end=YYYY-MM-DD",
                "summary": "Add daily income (Admin or owning Supplier)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "grocery_uid",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Income"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DailyIncomeCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DailyIncomeCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DailyIncomeCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Income recorded."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/groceries/{grocery_uid}/items/": {
            "get": {
                "operationId": "groceries_items_list",
                "description": "Routes:\n  GET  /api/v1/groceries/{grocery_uid}/items/       -> list\n  POST /api/v1/groceries/{grocery_uid}/items/       -> create",
                "summary": "List items for a grocery (any authenticated)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "grocery_uid",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Items"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/_Env"
                                    }
                                }
                            }
                        },
                        "description": "Items list."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groceries_items_create",
                "description": "Routes:\n  GET  /api/v1/groceries/{grocery_uid}/items/       -> list\n  POST /api/v1/groceries/{grocery_uid}/items/       -> create",
                "summary": "Create item for a grocery (Admin or owning Supplier)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "grocery_uid",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Items"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Item created."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/groceries/{id}/": {
            "get": {
                "operationId": "groceries_retrieve",
                "description": "Get details of a single grocery by UID.",
                "summary": "Retrieve grocery (Admin only)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groceries"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Grocery details."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "groceries_partial_update",
                "summary": "Update grocery (Admin, partial)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groceries"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroceryUpdateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroceryUpdateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroceryUpdateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Grocery updated."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groceries_destroy",
                "summary": "Soft-delete grocery (Admin)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groceries"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Grocery soft-deleted."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/items/{id}/": {
            "patch": {
                "operationId": "items_partial_update",
                "description": "PATCH /api/v1/items/{item_uid}/\nDELETE /api/v1/items/{item_uid}/",
                "summary": "Update item (Admin or owning Supplier, partial)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Items"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedItemUpdateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedItemUpdateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedItemUpdateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Item updated."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "items_destroy",
                "description": "PATCH /api/v1/items/{item_uid}/\nDELETE /api/v1/items/{item_uid}/",
                "summary": "Soft-delete item (Admin or owning Supplier)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Items"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Item soft-deleted."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/suppliers/": {
            "post": {
                "operationId": "suppliers_create",
                "description": "Create a new supplier account, hash the password, and assign them as responsible for a grocery via a `RESPONSIBLE_FOR` relationship.",
                "summary": "Create supplier & assign to grocery (Admin only)",
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Supplier created & assigned."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/suppliers/{id}/": {
            "patch": {
                "operationId": "suppliers_partial_update",
                "description": "Update fields like name or role for a supplier. Automatically refreshes `updated_at`.",
                "summary": "Update supplier (Admin only, partial)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The **UID of the Supplier** (Neo4j `UserNode.uid`) to update.",
                        "required": true
                    }
                ],
                "tags": [
                    "Suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/_Env"
                                }
                            }
                        },
                        "description": "Supplier updated."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_destroy",
                "description": "Mark a supplier as inactive (`is_active=false`). Account is not removed from Neo4j, preserving history.",
                "summary": "Soft-delete supplier (Admin only)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The **UID of the Supplier** (Neo4j `UserNode.uid`) to delete.",
                        "required": true
                    }
                ],
                "tags": [
                    "Suppliers"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Supplier soft-deleted."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DailyIncomeCreateRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "required": [
                    "amount",
                    "date"
                ]
            },
            "GroceryCreateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 120
                    },
                    "location": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 200
                    }
                },
                "required": [
                    "location",
                    "name"
                ]
            },
            "ItemCreateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "item_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "item_location": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0
                    }
                },
                "required": [
                    "item_location",
                    "item_type",
                    "name",
                    "price"
                ]
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "Meta": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "trace_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "trace_id",
                    "version"
                ]
            },
            "Paginated_EnvList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/_Env"
                        }
                    }
                }
            },
            "PatchedGroceryUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 120
                    },
                    "location": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 200
                    }
                }
            },
            "PatchedItemUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "item_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "item_location": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0
                    }
                }
            },
            "PatchedUserUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 120
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    }
                }
            },
            "Problem": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "required": [
                    "code",
                    "meta",
                    "status",
                    "title",
                    "type"
                ]
            },
            "RefreshRequest": {
                "type": "object",
                "properties": {
                    "refresh": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "refresh"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "ADMIN",
                    "SUPPLIER"
                ],
                "type": "string",
                "description": "* `ADMIN` - ADMIN\n* `SUPPLIER` - SUPPLIER"
            },
            "SupplierCreateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 8
                    },
                    "grocery_uid": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "email",
                    "grocery_uid",
                    "name",
                    "password"
                ]
            },
            "TokenPairOut": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "_Env": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/TokenPairOut"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "required": [
                    "code",
                    "data",
                    "message",
                    "meta",
                    "success"
                ]
            }
        }
    }
}